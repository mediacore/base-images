---
builders:
- type: amazon-instance
  access_key: '{{user `aws_access_key`}}'
  secret_key: '{{user `aws_secret_key`}}'
  instance_type: '{{user `aws_instance_type`}}'
  region: us-east-1
  source_ami: '{{user `aws_source_ami_instance`}}'
  ssh_username: ubuntu
  user_data_file: cloud-init
  ami_name: '{{user `build_id`}}-instance'
  ami_regions:
  - ap-northeast-1
  - ap-southeast-1
  - ap-southeast-2
  - eu-west-1
  - sa-east-1
  - us-west-1
  - us-west-2
  ami_groups:
  - all
  account_id: '{{user `aws_account_id`}}'
  x509_cert_path: '{{user `aws_cert_path`}}'
  x509_key_path: '{{user `aws_key_path`}}'
  bundle_destination: /mnt
  bundle_prefix: '{{user `build_id`}}-instance'
  s3_bucket: '{{user `aws_s3_bucket`}}'

- type: amazon-ebs
  access_key: '{{user `aws_access_key`}}'
  secret_key: '{{user `aws_secret_key`}}'
  instance_type: '{{user `aws_instance_type`}}'
  region: us-east-1
  source_ami: '{{user `aws_source_ami_ebs`}}'
  ssh_username: ubuntu
  user_data_file: cloud-init
  ami_name: '{{user `build_id`}}-ebs'
  ami_regions:
  - ap-northeast-1
  - ap-southeast-1
  - ap-southeast-2
  - eu-west-1
  - sa-east-1
  - us-west-1
  - us-west-2
  ami_groups:
  - all
- boot_command:
  - <esc><esc><enter><wait>
  - '/install/vmlinuz noapic '
  - 'preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed-precise64.cfg '
  - 'debian-installer=en_US auto locale=en_US kbd-chooser/method=us '
  - 'hostname={{ .Name }} '
  - 'fb=false debconf/frontend=noninteractive '
  - 'keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA '
  - 'keyboard-configuration/variant=USA console-setup/ask_detect=false '
  - initrd=/install/initrd.gz -- <enter>
  disk_size: 10000
  guest_os_type: Ubuntu_64
  http_directory: http
  iso_checksum: 2cbe868812a871242cdcdd8f2fd6feb9
  iso_checksum_type: md5
  iso_url: http://releases.ubuntu.com/12.04/ubuntu-12.04.3-server-amd64.iso
  shutdown_command: echo $USER | sudo -S shutdown -P now
  ssh_password: vagrant
  ssh_username: vagrant
  type: virtualbox
  vm_name: '{{user `build_id`}}'
post-processors:
- type: vagrant
  output: '{{user `build_id`}}-{{.BuildName}}.box'
provisioners:
- type: shell
  execute_command: "echo $USER | {{ .Vars }} sudo -S -E sh '{{.Path}}'"
  script: scripts/vagrant.sh
- type: chef
  cookbook_paths:
  - cookbooks
  install_command: "wget -q -O- https://www.opscode.com/chef/install.sh | {{if .Sudo}}sudo {{end}}bash -s -- -v {{user `chef_version`}}"
  json:
    base:
      hostname: unassigned-hostname
  run_list:
  - recipe[base]
- type: shell
  execute_command: "echo $USER | {{ .Vars }} sudo -S -E sh '{{.Path}}'"
  scripts:
  - scripts/virtualbox.sh
  - scripts/amazon.sh
  - scripts/cleanup.sh

variables:
  aws_access_key: ''
  aws_account_id: ''
  aws_cert_path: ''
  aws_instance_type: m1.xlarge
  aws_key_path: ''
  aws_s3_bucket: ''
  aws_secret_key: ''
  aws_source_ami_ebs: ami-a73264ce
  aws_source_ami_instance: ami-ad3660c4
  build_id: base-0.1.0-amd64-20131023
  chef_version: 11.6.2
